###########################################################
# AUTHOR  : Jimmy Zhou  - Adchina.com
# Email   : jimmyzhou@gmail.com 
# DATE    : 2-07-2014 
# EDIT    : 5-04-2014
# COMMENT : This script creates new Active Directory users 
#           by HR excel worksheet,
#           including different kind of properties, based
#           on an employee.xlsx
# VERSION : 2.0
###########################################################

# CHANGELOG
# Version 2.0: 2-7-2014 - Changed the code for better
# - Create AD Account by HR Excel WorkSheet
# - Move Account to Dept OU
# - Add Account to Dept Group
# - Give New Account Count From WorkSheet(NewEmployee.xlsx)
# - Import New Account to WorkSheet
# - Automaticlly Drawing Pie Pictures
# - Send Email Report to Admin

#requires -version 2.0
<#
  Integrating Excel with PowerShell script
  
  Run the script with -Visible if you want to see
  the Excel spreadsheet
#>
[cmdletbinding()]
Param ([switch]$Visible)
Import-Module ActiveDirectory
$file="C:\employee.xlsx"
$date     = Get-Date
$addn     = (Get-ADDomain).DistinguishedName
$dnsroot  = (Get-ADDomain).DNSRoot

$xl=New-Object -ComObject "Excel.Application" 
$wb=$xl.Workbooks.Open($file)
$ws=$wb.ActiveSheet
$xl.visible=$Visible
$data=$ws.Range("B3").Text
$dept=$ws.Range("F2").Text
$group=$ws.Range("H2").Text
$eid=$ws.Range("L2").Text
$job=$ws.Range("J2").Text
$Ename=$ws.Range("B3").Text
$Cname=$ws.Range("B2").Text
$i=$Ename -Split " "
$lname=$i[1]
$fname=$i[0]
$dname=$Ename+$Cname
$sam=$i[0]+"."+$i[1]
$email=$i[0]+"."+$i[1]+"@"+"contoso.com"
$obdate=$ws.Range("D2").Text
$corp=$ws.Range("N2").Text
$pass = ConvertTo-SecureString -AsPlainText "adchina.com1" -force
New-Object -TypeName PSObject -Property @{   
        部门=$dept
        组别=$group
        姓=$lname
        名=$fname
        中文名=$Cname
        员工号=$eid
        职位=$job
        显示名=$dname
        邮件地址=$email
        入职日期=$obdate
	sam=$sam
        dn=$dn
        corp=$corp
        }   
#close Excel
#$xl.displayAlerts=$False
$wb.Close()
$xl.Quit()
 New-ADUser -Name $sam -GivenName $fname -DisplayName $dname `
            -Surname $lname `
            -Office "Shanghai" -Description $eid  `
            -City "Shanghai" -State "Shanghai" `
            -PostalCode "200025" -Country "CN" -UserPrincipalName $email `
            -Company "Adchina" -Department $dept -EmployeeID $eid `
            -AccountPassword $pass -Enabled $True `
            -PasswordNeverExpires $True
# Move the user to the OU ($location) you set above. If you don't
# want to move the user(s) and just create them in the global Users
# OU, comment the string below
# Set the target OU
$location="OU=$dept,OU=Account,$addn"
$dn = (Get-ADUser -Identity "$sam").DistinguishedName
New-Object -TypeName PSObject -Property @{ 
location=$location
dn=$dn
}
Move-ADObject -Identity "$dn" -TargetPath "$location"
$adgroup="$dept"
Add-ADGroupMember -Identity "$adgroup" –Members "$sam"
#Exchange2010
## Create Session with Exchange 2010 change your URI address  
$s=New-PSSession -ConfigurationName Microsoft.Exchange -ConnectionUri http://WIN-C2F1EGA8LHM.contoso.com/powershell -Authentication Kerberos 
Import-PSSession -Session $s
Enable-Mailbox -Identity $sam -Database $adgroup
#-------------------------------------------------------------------------
#Create Excel Report
$file1="C:\newemployee.xlsx"
#Read Excel Data
$excel=New-Object -ComObject "Excel.Application" 
$wb1=$excel.Workbooks.Open($file1)
$objWorksheet=$wb1.ActiveSheet
$excel.visible=$Visible
$data=$objWorksheet.Range("K8").Text
$data=[int]$data

 # write information to the excel file
$i = $data+4
$objWorksheet.Cells.Item($i,1) = $Ename; $objWorksheet.Cells.Item($i,2) = $Cname; $objWorksheet.Cells.Item($i,3) = $obdate; $objWorksheet.Cells.Item($i,4) = $dept; $objWorksheet.Cells.Item($i,5) = $group;$objWorksheet.Cells.Item($i,6) = $job; $objWorksheet.Cells.Item($i,7) = $eid; $objWorksheet.Cells.Item($i,8) = $corp
New-Object -TypeName PSObject -Property @{   
        新员工数=$data
        i=$i
        } 

#add column style
$objWorksheet.Range("(A$i):(H$i)").Name = "Title"
$objWorksheet.Range("(A$i):(H$i)").font.Name = "arial"
$objWorksheet.Range("(A$i):(H$i)").Interior.ColorIndex = 15
  
#Quit Excel
$excel.displayAlerts=$False
$wb1.Saveas($file1)
$wb1.Close()
$excel.Quit()

#--------------------------------------------------------------------------------------------------------------------------------------------
#--------------------Send Email Report to Administrator--------------------------------------------------------------------------------------

$htstyle = '<style>'
$htstyle = $htstyle + “body{font-family:segoe ui,arial;color:#FF0000; }”
$htstyle = $htstyle + “table{border-width: 1px;border-style: solid;border-color: white;border-collapse: border-collapse;}”
$htstyle = $htstyle + “th{border-width: 2px;padding: 4px;border-style: solid;border-color: #d1d3d4;background-color:#D9006C;color:white;}”
$htstyle = $htstyle + “td{border-width: 2px;padding: 4px;border-style: solid;border-color: #d1d3d4;background-color:#FF60AF;color:white}”
$htstyle = $htstyle + “</style>”
New-Object -TypeName PSObject -Property @{ 
EName=$Ename
CName=$Cname
Password="adchina.com1"
OnBoardDate=$obdate
Dept=$dept
Group=$group
Job=$job
EmployeeID=$eid
Corp=$corp
} | ConvertTo-Html -head $htstyle -Body  "<H1>New Employee Create Details(Worksheet Attached)</H1>"  | Out-File C:/Users/admin/HtmlReport.htm 
 
#mail server configuration
$smtpServer = "WIN-C2F1EGA8LHM.contoso.com"
$smtpUser = "admin"
$smtpPassword = "123.com"
#create the mail message
$mail = New-Object System.Net.Mail.MailMessage
#set the addresses
$MailAddress="admin@contoso.com"
$MailtoAddress="admin@contoso.com"
$mail.From = New-Object System.Net.Mail.MailAddress($MailAddress)
$mail.To.Add($MailtoAddress)
#set the content
$mail.Subject = "New Employee Created - $Ename $Cname";
$mail.Priority  = "High"
$mail.IsBodyHTML = $true
$mail.Body = Get-Content C:/Users/admin/HtmlReport.htm
 #Get-Content C:/Users/admin/HtmlReport.htm 
 
#$filename="file1"
#$attachment = new-Object System.Net.Mail.Attachment($filename)
$mail.Attachments.Add($file1)
#send the message
$smtp = New-Object System.Net.Mail.SmtpClient -argumentList $smtpServer
$smtp.Credentials = New-Object System.Net.NetworkCredential -argumentList $smtpUser,$smtpPassword
$smtp.Send($mail)
